- name: frontend setup
  hosts: all
  become: yes
  tasks:
    - name: install nginx
      ansible.builtin.dnf:
         name: nginx
         state: present

    - name: placing Expense config file in nginx
      ansible.builtin.copy:
         src: expense.conf
         dest: /etc/nginx/default.d/expense.conf

    - name: removing old nginx content
      ansible.builtin.file:
         path: /usr/share/nginx/html
         state: absent

    - name: download frontend code
      ansible.builtin.get_url:
         url: https://expense-artifacts.s3.amazonaws.com/frontend.zip
         dest: /tmp/frontend.zip

 #   - name: extracting frontend code
#    - name: starting nginx service







#  download_and_extract() {
 # echo download $component code
 # curl -s -o /tmp/$component.zip https://expense-artifacts.s3.amazonaws.com/$component.zip >>/$log_file
 # stat_check

#  echo extracting $component code
#  unzip /tmp/$component.zip >>$log_file
#  stat_check
 #}




#  source common.sh
#  component=frontend

 # echo install nginx
#  dnf install nginx -y &>>$log_file
#  stat_check

 # echo placing Expense config file in nginx
# cp expense.conf /etc/nginx/default.d/expense.conf &>>$log_file
#  stat_check

#  echo removing old nginx content
#  rm -rf /usr/share/nginx/html/* &>>$log_file
#  stat_check

#  cd /usr/share/nginx/html

#  download_and_extract

#  echo starting nginx service
#  systemctl enable nginx &>>$log_file
#  systemctl restart nginx &>>$log_file
#  stat_check